[0m[[0m[0mdebug[0m] [0m[0mInvalidating \Volumes\Users\lucasrpb\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar: class scala.Predef$ now provided by D:\Users\resta\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(\Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\Sequencer.scala, \Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\package.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(D:\Users\resta\IdeaProjects\calvin\src\main\scala\calvin\package.scala, D:\Users\resta\IdeaProjects\calvin\src\main\scala\calvin\Transactor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(\Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\package$Transaction$.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\package$Command.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\package.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\package$.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\package$Transaction.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\Sequencer$$anon$1.class, \Volumes\Users\lucasrpb\IdeaProjects\calvin\target\scala-2.12\classes\calvin\Sequencer.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(\Volumes\Users\lucasrpb\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(calvin.Sequencer, calvin.package, calvin.Command, calvin.Transaction)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(\Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\package.scala, \Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\Sequencer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(\Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\package.scala, \Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\Sequencer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(calvin.Sequencer, calvin.package, calvin.Command, calvin.Transaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(D:\Users\resta\IdeaProjects\calvin\src\main\scala\calvin\package.scala, D:\Users\resta\IdeaProjects\calvin\src\main\scala\calvin\Transactor.scala, \Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\package.scala, \Volumes\Users\lucasrpb\IdeaProjects\calvin\src\main\scala\calvin\Sequencer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated package objects: Set(calvin.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 2 sources: invalidated sources (4) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to D:\Users\resta\IdeaProjects\calvin\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 16386b4 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files (x86)\Java\jre1.8.0_211\lib\resources.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\rt.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\jsse.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\jce.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\charsets.jar;C:\Program Files (x86)\Java\jre1.8.0_211\lib\jfr.jar;C:\Program Files (x86)\Java\jre1.8.0_211\classes;D:\Users\resta\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\Users\resta\IdeaProjects\calvin\target\scala-2.12\classes;D:\Users\resta\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.5.jar;D:\Users\resta\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.12.8.jar;D:\Users\resta\.ivy2\cache\com.google.guava\guava\bundles\guava-27.1-jre.jar;D:\Users\resta\.ivy2\cache\com.google.guava\failureaccess\bundles\failureaccess-1.0.1.jar;D:\Users\resta\.ivy2\cache\com.google.guava\listenablefuture\jars\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;D:\Users\resta\.ivy2\cache\com.google.code.findbugs\jsr305\jars\jsr305-3.0.2.jar;D:\Users\resta\.ivy2\cache\org.checkerframework\checker-qual\jars\checker-qual-2.5.2.jar;D:\Users\resta\.ivy2\cache\com.google.errorprone\error_prone_annotations\jars\error_prone_annotations-2.2.0.jar;D:\Users\resta\.ivy2\cache\com.google.j2objc\j2objc-annotations\jars\j2objc-annotations-1.1.jar;D:\Users\resta\.ivy2\cache\org.codehaus.mojo\animal-sniffer-annotations\jars\animal-sniffer-annotations-1.17.jar;D:\Users\resta\.ivy2\cache\org.apache.commons\commons-lang3\jars\commons-lang3-3.8.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 5.1215663 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calvin.Transactor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calvin.Transactor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calvin.Transactor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of calvin.package: Set(UsedName(Transactor,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calvin.Transactor,ModifiedNames(changes = UsedName(batch,[Default]), UsedName(running,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(calvin;Transactor;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(release,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(Transactor,[Default]), UsedName($isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(offer,[Default]), UsedName(timer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The calvin.Transactor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(batch,[Default]), UsedName(running,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(calvin;Transactor;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(release,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName(Transactor,[Default]), UsedName($isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(offer,[Default]), UsedName(timer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calvin.Transactor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(calvin.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calvin.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calvin.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calvin.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of calvin.Transactor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calvin.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(sequencers,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The calvin.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(sequencers,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calvin.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calvin.Command...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calvin.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calvin.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calvin.Command,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The calvin.Command has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calvin.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calvin.Transaction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calvin.Transaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calvin.Transaction)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of calvin.Transactor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calvin.Transaction,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The calvin.Transaction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calvin.Transaction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calvin.Sequencer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calvin.Sequencer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calvin.Sequencer)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calvin.Sequencer,ModifiedNames(changes = UsedName(batch,[Default]), UsedName(running,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(calvin;Sequencer;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(release,[Default]), UsedName(ne,[Default]), UsedName(Sequencer,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(offer,[Default]), UsedName(timer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The calvin.Sequencer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(batch,[Default]), UsedName(running,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(calvin;Sequencer;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(release,[Default]), UsedName(ne,[Default]), UsedName(Sequencer,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(offer,[Default]), UsedName(timer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calvin.Sequencer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
